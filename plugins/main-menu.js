const handler = async (m, { conn, usedPrefix }) => {
  // Obtiene todos los plugins activos
  const plugins = Object.values(global.plugins || {}).filter(p => !p?.disabled)

  // Mapeo de categor√≠as y sus emojis/etiquetas
  const categoryMap = {
    main:       'üìã INFORMACI√ìN',
    buscadores: 'üîç BUSCADORES',
    downloader: 'üöÄ DESCARGAS',
    group:      'üë• GRUPOS',
    fun:        'üéâ DIVERSI√ìN',
    text:       '‚ú® EFECTOS DE TEXTO',
    tools:      'üîß HERRAMIENTAS',
    sticker:    'üßß STICKER',
    owner:      'üëë OWNER'
  }

  // Agrupa comandos por categor√≠a
  const categoryCommands = {}
  for (let plugin of plugins) {
    const tags = Array.isArray(plugin.tags) ? plugin.tags : (plugin.tags ? [plugin.tags] : [])
    const helps = Array.isArray(plugin.help) ? plugin.help : (plugin.help ? [plugin.help] : [])
    for (let tag of tags) {
      if (!categoryMap[tag]) continue
      if (!categoryCommands[tag]) categoryCommands[tag] = new Set()
      helps.forEach(h => {
        if (typeof h === 'string') categoryCommands[tag].add(h.trim())
      })
    }
  }

  // Construye el men√∫ din√°mico
  let menu = '‚ï≠‚îÄ„Äé ùôéùôùùôûùôØùô™ùô†ùôñ-ùòºùôÑ „Äè\n‚îÇ\n'
  for (let [tag, label] of Object.entries(categoryMap)) {
    const cmds = categoryCommands[tag]
    if (!cmds || cmds.size === 0) continue
    menu += `‚îú ${label}\n`
    for (let cmd of [...cmds].sort()) {
      menu += `‚îÇ ‚ó¶ ${usedPrefix}${cmd}\n`
    }
    menu += '‚îÇ\n'
  }
  menu += '‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n> _*Bot creado por Carlos*_'

  // Env√≠a el mensaje con imagen y men√∫
  await conn.sendMessage(m.chat, {
    image: { url: 'https://qu.ax/diNXY.jpg' },
    caption: menu
  }, { quoted: m })
}

handler.command = /^(menu|help|comandos)$/i
export default handler